---
- name: Compute repo arch
  set_fact:
    docker_repo_arch: "{{ docker_repo_arch_map.get(ansible_architecture, 'amd64') }}"

# -----------------------------
# PREP: stop docker, clean overlays, clear conflicting repos/keys
# -----------------------------

- name: Stop Docker service if running (best effort)
  service:
    name: docker
    state: stopped
  ignore_errors: yes

- name: Stop all running containers (best effort)
  shell: "docker ps -q | xargs -r docker stop"
  changed_when: false
  ignore_errors: yes

- name: Unmount overlay2 submounts (best effort)
  shell: |
    set -e
    mount | awk '/\/var\/lib\/docker\/overlay2\/.*\/merged/ {print $3}' \
      | tac | xargs -r -n1 umount -lf
  changed_when: false
  ignore_errors: yes

- name: Remove legacy Docker APT source files (avoid Signed-By conflicts)
  when: docker_cleanup_repos | bool
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/apt/sources.list.d/docker.list
    - /etc/apt/sources.list.d/docker-ce.list
    - /etc/apt/sources.list.d/docker.repo

- name: Remove legacy Docker key files (both common locations)
  when: docker_cleanup_repos | bool
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/apt/keyrings/docker.asc
    - /usr/share/keyrings/docker.gpg

# -----------------------------
# REMOVE conflicting Debian packages first
# -----------------------------

- name: Remove Debian Docker packages (docker.io & friends)
  when: docker_remove_debian_pkgs | bool
  apt:
    name:
      - docker
      - docker.io
      - docker-doc
      - docker-cli
      - docker-compose
      - docker-compose-plugin
      - docker-buildx
      - docker-buildx-plugin
      - containerd
      - runc
    state: absent
    purge: yes
    update_cache: yes

# -----------------------------
# PREREQS + KEY + REPO
# -----------------------------

- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

# Use curl | gpg --dearmor because apt_key is deprecated on newer distros
- name: Install Dockerâ€™s official GPG key (dearmored)
  shell: |
    set -e
    curl -fsSL "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg" \
      | gpg --dearmor -o "{{ docker_keyring_path }}"
  args:
    creates: "{{ docker_keyring_path }}"

- name: Add Docker APT repository (idempotent)
  apt_repository:
    repo: "deb [arch={{ docker_repo_arch }} signed-by={{ docker_keyring_path }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  register: docker_repo_added

- name: apt update if repo changed
  apt:
    update_cache: yes
  when: docker_repo_added is changed

# -----------------------------
# INSTALL ENGINE + COMPOSE PLUGIN
# -----------------------------

- name: Install Docker Engine
  apt:
    name: "{{ docker_package }}"
    state: present
    update_cache: yes
  notify: restart docker

- name: Install Docker Compose plugin
  apt:
    name: docker-compose-plugin
    state: present

- name: Install Buildx plugin (optional but useful)
  apt:
    name: docker-buildx-plugin
    state: present
  ignore_errors: yes

# -----------------------------
# VERIFY + SERVICE
# -----------------------------

- name: Ensure Docker is enabled and started
  service:
    name: docker
    state: started
    enabled: yes

- name: Verify Docker CLI
  command: docker --version
  register: docker_version
  changed_when: false

- name: Verify Docker Compose
  command: docker compose version
  register: compose_version
  changed_when: false
  failed_when: false

- name: Show versions
  debug:
    msg:
      - "{{ docker_version.stdout | default('docker --version not available') }}"
      - "{{ compose_version.stdout | default('compose not available') }}"
